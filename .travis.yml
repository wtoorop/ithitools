sudo: false
language: cpp
addons:
  apt:
    packages:
      - valgrind
      - lcov
      - python
      - doxygen
      - graphviz
matrix:
  include:
    - os: linux
      compiler: gcc
      env: VALGRIND=true  ANALYSIS=true  COVERAGE=true  DOXYGEN=true
    - os: linux
      compiler: clang
      env: VALGRIND=true  ANALYSIS=false COVERAGE=false DOXYGEN=false
    - os: osx
      compiler: gcc
      env: VALGRIND=false ANALYSIS=false COVERAGE=false DOXYGEN=false
    - os: osx
      compiler: clang
      env: VALGRIND=false ANALYSIS=false COVERAGE=false DOXYGEN=false
script:
  - |
      if $COVERAGE ; then
          CXXFLAGS="-Wall -Wextra -Wpedantic -Werror -g -fprofile-arcs -ftest-coverage -O0" \
            CFLAGS="-Wall -Wextra -Wpedantic -Werror -g -fprofile-arcs -ftest-coverage -O0" \
           LDFLAGS="-lgcov --coverage" cmake .
      elif $VALGRIND || $ANALYSIS ; then
          CXXFLAGS="-Wall -Wextra -Wpedantic -Werror -g" \
            CFLAGS="-Wall -Wextra -Wpedantic -Werror -g" cmake .
      else
          CXXFLAGS="-Wall -Wextra -Wpedantic -Werror"
            CFLAGS="-Wall -Wextra -Wpedantic -Werror" cmake .
      fi
  - make -j 4 VERBOSE=1
  - ./ithitest
  - python travis/check-dnsstats-tables.py
  - |
      if $VALGRIND ; then
        valgrind -v --error-exitcode=1 ./ithitest
      fi
  - |
      if $ANALYSIS ; then
        mkdir analysis
        (
          cd analysis
          echo "gitdir: ../.git" > .git
          git reset --hard
          scan-build cmake .
          scan-build -o ../analysis-results -stats make .
        )
      fi
  - |
      if $COVERAGE ; then
        geninfo .  -o ithitest.info
        lcov --remove ithitest.info '/usr/include/*' -o ithi.info
        genhtml ithi.info --output-directory coverage
      fi
  - |
      if $DOXYGEN ; then
        doxygen travis/Doxyfile
      fi
